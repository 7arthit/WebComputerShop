@model IEnumerable<WebComputerShop.Models.Product>

@{
    ViewData["Title"] = "View";
    var totalPages = 101;
    var pagesToShow = 10;
    var currentPage = 1;
}

<p>
    <a asp-action="Create" class="btn btn-success">เพิ่มสินค้า</a>
</p>

<form asp-controller="Product" asp-action="Index" method="get" class="form-inline">
    <div class="input-group mb-2">
        <input type="text" class="form-control" id="searchText" name="searchText" placeholder="ป้อนชื่อเพื่อค้นหา">
        <div class="input-group-append">
            <button type="submit" class="btn btn-primary">ค้นหา</button>
        </div>
    </div>
    <input type="hidden" name="page" value="@currentPage" />
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductTypeId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td>
                <img src="@Url.Content(item.Image)" width="135" height="200"/>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductTypeId)
            </td>
            <td>
                @Html.ActionLink("แก้ไข", "Edit", new {id=item.Id  },new{@class = "btn btn-secondary"})
                @Html.ActionLink("รายละเอียด", "Details", new { id=item.Id },new{@class = "btn btn-info"})
                @Html.ActionLink("ลบ", "Delete", new { id=item.Id },new{onclick="return confirm('Are you sure want to delete?')",@class = "btn btn-danger"})
            </td>
        </tr>
}
    </tbody>
</table>

<p>
    @if (totalPages > pagesToShow)
    {
        int startPage = Math.Max(1, currentPage - (pagesToShow / 2));
        int endPage = Math.Min(totalPages, startPage + pagesToShow - 1);

        if (startPage > 1)
        {
            <a name="page" asp-action="Index" asp-route-page="1" class="btn btn-info">1</a>
            <span>...</span>
        }

        for (int i = startPage; i <= endPage; i++)
        {
            <a name="page" asp-action="Index" asp-route-page="@i" class="btn btn-info">@i</a>
        }

        if (endPage < totalPages)
        {
            <span>...</span>
            <a name="page" asp-action="Index" asp-route-page="@totalPages" class="btn btn-info">@totalPages</a>
        }
    }
    else
    {
        for (int i = 1; i <= totalPages; i++)
        {
            <a name="page" asp-action="Index" asp-route-page="@i" class="btn btn-info">@i</a>
        }
    }
</p>
